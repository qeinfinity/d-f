services:
  dealer-flow-app: # Or 'dealer-flow' if you're using that name
    build: .
    image: dealer-flow-stack-img # Or 'dealer-flow'
    container_name: dealer_flow_app_c # Or 'dealer_flow_app'
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on: # MODIFIED HERE
      - redis
      - clickhouse_server
    networks:
      - dealer_net

  redis:
    image: redis:alpine
    container_name: dealer_flow_redis_c # Or 'dealer_flow_redis'
    networks:
      - dealer_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s # ADD START PERIOD

  clickhouse_server:
    image: clickhouse/clickhouse-server:latest
    container_name: dealer_flow_clickhouse_c
    hostname: clickhouse_server
    env_file:
      - .env
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - dealer_net
    ulimits:
      nofile: { soft: 262144, hard: 262144 }
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse_schema.sql:/docker-entrypoint-initdb.d/init_schema.sql:ro
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s # ADD START PERIOD

  clickhouse_writer:
    build: .
    image: dealer-flow-stack-img # Or 'dealer-flow'
    container_name: dealer_flow_ch_writer_c
    command: python -m dealer_flow.clickhouse_writer
    env_file:
      - .env
    depends_on: # MODIFIED HERE
      - redis
      - clickhouse_server
    networks:
      - dealer_net

networks:
  dealer_net:
    driver: bridge

volumes:
  clickhouse_data:
